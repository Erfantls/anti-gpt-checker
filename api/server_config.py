import os

from dotenv import load_dotenv
from motor.motor_asyncio import AsyncIOMotorClient
from pymongo import MongoClient

load_dotenv()


API_MONGODB_URI = os.getenv("API_MONGODB_URI")
API_MONGODB_PORT = int(os.getenv("API_MONGODB_PORT"))
API_MONGODB_DB_NAME= os.getenv("API_MONGODB_DB_NAME")

API_MONGODB_AUTH_USER = os.getenv("API_MONGODB_AUTH_USER")
API_MONGODB_AUTH_PASS = os.getenv("API_MONGODB_AUTH_PASS")
API_MONGODB_AUTH_DB = os.getenv("API_MONGODB_AUTH_DB")

if API_MONGODB_AUTH_USER and API_MONGODB_AUTH_PASS and API_MONGODB_AUTH_DB:
    API_MONGO_CLIENT = MongoClient(host=API_MONGODB_URI, port=API_MONGODB_PORT, username=API_MONGODB_AUTH_USER, password=API_MONGODB_AUTH_PASS, authSource=API_MONGODB_AUTH_DB)
    API_ASYNC_MONGO_CLIENT = AsyncIOMotorClient(host=API_MONGODB_URI, port=API_MONGODB_PORT, username=API_MONGODB_AUTH_USER, password=API_MONGODB_AUTH_PASS, authSource=API_MONGODB_AUTH_DB)
else:
    API_MONGO_CLIENT = MongoClient(API_MONGODB_URI, API_MONGODB_PORT)
    API_ASYNC_MONGO_CLIENT = AsyncIOMotorClient(API_MONGODB_URI, API_MONGODB_PORT)

API_ANALYSIS_COLLECTION_NAME = os.getenv("API_ANALYSIS_COLLECTION_NAME", "analysis")
API_DOCUMENTS_COLLECTION_NAME = os.getenv("API_DOCUMENTS_COLLECTION_NAME", "documents")
API_ATTRIBUTES_COLLECTION_NAME = os.getenv("API_ATTRIBUTES_COLLECTION_NAME", "attributes")
API_ATTRIBUTES_REFERENCE_COLLECTION_NAME = os.getenv("API_ATTRIBUTES_REFERENCE_COLLECTION_NAME", "attributes_reference")

API_WEB_APP_IP = os.getenv("API_WEB_APP_IP", "")
API_WEB_APP_PORT = int(os.getenv("API_WEB_APP_PORT", 8000))

API_DEBUG = (os.getenv("API_DEBUG", "False").lower() in ["1", "true", "t", "yes", "y"])